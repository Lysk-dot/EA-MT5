apiVersion: 1

datasources:
  # Prometheus
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      timeInterval: "15s"
      httpMethod: POST
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: jaeger

  # Loki
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: jaeger
          matcherRegex: "trace_id=(\\w+)"
          name: TraceID
          url: "$${__value.raw}"

  # Jaeger
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Request rate'
            query: 'sum(rate(traces_spanmetrics_calls_total{$$__tags}[5m]))'
          - name: 'Request duration'
            query: 'histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m])) by (le))'
      nodeGraph:
        enabled: true
      lokiSearch:
        datasourceUid: loki

  # Tempo (se vocÃª descomentar no docker-compose.yml)
  # - name: Tempo
  #   type: tempo
  #   access: proxy
  #   url: http://tempo:3200
  #   editable: true
  #   jsonData:
  #     tracesToLogs:
  #       datasourceUid: loki
  #       tags: ['job', 'instance', 'pod', 'namespace']
  #       mappedTags: [{ key: 'service.name', value: 'service' }]
  #       mapTagNamesEnabled: true
  #       spanStartTimeShift: '1h'
  #       spanEndTimeShift: '1h'
  #     tracesToMetrics:
  #       datasourceUid: prometheus
  #     lokiSearch:
  #       datasourceUid: loki
  #     serviceMap:
  #       datasourceUid: prometheus
  #     nodeGraph:
  #       enabled: true

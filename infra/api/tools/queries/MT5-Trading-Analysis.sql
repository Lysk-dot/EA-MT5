{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d740a0ac",
   "metadata": {
    "vscode": {
     "languageId": "sql"
    -- Arquivo corrigido: remova conte√∫do JSON e insira queries SQL v√°lidas aqui
   "source": [
    "-- üîç QUERY DE VERIFICA√á√ÉO R√ÅPIDA - MT5 Trading Database\n",
    "-- Execute cada se√ß√£o separadamente para an√°lise completa\n",
    "\n",
    "-- ============================================================\n",
    "-- 1Ô∏è‚É£ ESTRUTURA DA TABELA market_data\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    column_name, \n",
    "    data_type, \n",
    "    is_nullable,\n",
    "    column_default\n",
    "FROM information_schema.columns\n",
    "WHERE table_name = 'market_data'\n",
    "ORDER BY ordinal_position;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 2Ô∏è‚É£ √öLTIMOS 20 REGISTROS (Dados Mais Recentes)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    ts,\n",
    "    symbol,\n",
    "    timeframe,\n",
    "    open,\n",
    "    high,\n",
    "    low,\n",
    "    close,\n",
    "    volume,\n",
    "    tick_volume\n",
    "FROM market_data \n",
    "ORDER BY ts DESC \n",
    "LIMIT 20;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 3Ô∏è‚É£ RESUMO POR S√çMBOLO (√öltimas 24h)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    COUNT(*) as total_candles,\n",
    "    MIN(ts) as primeiro_registro,\n",
    "    MAX(ts) as ultimo_registro,\n",
    "    SUM(volume) as volume_total,\n",
    "    AVG(high - low) as range_medio,\n",
    "    MAX(high) as max_high,\n",
    "    MIN(low) as min_low\n",
    "FROM market_data\n",
    "WHERE ts > NOW() - INTERVAL '24 hours'\n",
    "GROUP BY symbol\n",
    "ORDER BY total_candles DESC;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 4Ô∏è‚É£ CANDLES DO EURUSD (√öltimas 50)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    ts,\n",
    "    open,\n",
    "    high,\n",
    "    low,\n",
    "    close,\n",
    "    volume,\n",
    "    tick_volume,\n",
    "    (high - low) as range,\n",
    "    (close - open) as movement,\n",
    "    CASE \n",
    "        WHEN close > open THEN 'BULL'\n",
    "        WHEN close < open THEN 'BEAR'\n",
    "        ELSE 'DOJI'\n",
    "    END as candle_type\n",
    "FROM market_data\n",
    "WHERE symbol = 'EURUSD'\n",
    "ORDER BY ts DESC\n",
    "LIMIT 50;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 5Ô∏è‚É£ AN√ÅLISE DE VOLUME (Top 10 s√≠mbolos)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    SUM(volume) as volume_total,\n",
    "    AVG(volume) as volume_medio,\n",
    "    MAX(volume) as volume_maximo,\n",
    "    COUNT(*) as num_candles,\n",
    "    SUM(volume) / NULLIF(COUNT(*), 0) as volume_por_candle\n",
    "FROM market_data\n",
    "WHERE ts > NOW() - INTERVAL '24 hours'\n",
    "GROUP BY symbol\n",
    "ORDER BY volume_total DESC\n",
    "LIMIT 10;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 6Ô∏è‚É£ VOLATILIDADE POR S√çMBOLO (√öltimas 24h)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    AVG(high - low) as range_medio,\n",
    "    MAX(high - low) as range_maximo,\n",
    "    MIN(high - low) as range_minimo,\n",
    "    STDDEV(high - low) as desvio_padrao,\n",
    "    COUNT(*) as num_candles\n",
    "FROM market_data\n",
    "WHERE ts > NOW() - INTERVAL '24 hours'\n",
    "GROUP BY symbol\n",
    "ORDER BY desvio_padrao DESC;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 7Ô∏è‚É£ TAXA DE INGEST√ÉO (Candles por minuto, √∫ltima hora)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    DATE_TRUNC('minute', ts) as minuto,\n",
    "    COUNT(*) as candles_recebidos,\n",
    "    COUNT(DISTINCT symbol) as symbols_ativos,\n",
    "    SUM(volume) as volume_total\n",
    "FROM market_data\n",
    "WHERE ts > NOW() - INTERVAL '1 hour'\n",
    "GROUP BY minuto\n",
    "ORDER BY minuto DESC\n",
    "LIMIT 60;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 8Ô∏è‚É£ LAT√äNCIA DE DADOS (Quanto tempo atr√°s foi o √∫ltimo dado?)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    MAX(ts) as ultimo_dado,\n",
    "    NOW() as timestamp_atual,\n",
    "    EXTRACT(EPOCH FROM (NOW() - MAX(ts)))/60 as minutos_atras,\n",
    "    CASE \n",
    "        WHEN EXTRACT(EPOCH FROM (NOW() - MAX(ts)))/60 < 5 THEN '‚úÖ OK'\n",
    "        WHEN EXTRACT(EPOCH FROM (NOW() - MAX(ts)))/60 < 30 THEN '‚ö†Ô∏è ATRASADO'\n",
    "        ELSE '‚ùå CR√çTICO'\n",
    "    END as status\n",
    "FROM market_data\n",
    "GROUP BY symbol\n",
    "ORDER BY minutos_atras ASC;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- 9Ô∏è‚É£ QUALIDADE DOS DADOS (Verificar anomalias)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    COUNT(*) as total_registros,\n",
    "    SUM(CASE WHEN open IS NULL THEN 1 ELSE 0 END) as nulls_open,\n",
    "    SUM(CASE WHEN high IS NULL THEN 1 ELSE 0 END) as nulls_high,\n",
    "    SUM(CASE WHEN low IS NULL THEN 1 ELSE 0 END) as nulls_low,\n",
    "    SUM(CASE WHEN close IS NULL THEN 1 ELSE 0 END) as nulls_close,\n",
    "    SUM(CASE WHEN volume IS NULL OR volume = 0 THEN 1 ELSE 0 END) as volume_zero,\n",
    "    SUM(CASE WHEN high < low THEN 1 ELSE 0 END) as erros_high_low,\n",
    "    SUM(CASE WHEN open > high OR open < low THEN 1 ELSE 0 END) as erros_open,\n",
    "    SUM(CASE WHEN close > high OR close < low THEN 1 ELSE 0 END) as erros_close\n",
    "FROM market_data\n",
    "WHERE ts > NOW() - INTERVAL '24 hours'\n",
    "GROUP BY symbol\n",
    "ORDER BY symbol;\n",
    "\n",
    "\n",
    "-- ============================================================\n",
    "-- üîü TIMELINE COMPLETA (Primeiro e √∫ltimo registro de cada s√≠mbolo)\n",
    "-- ============================================================\n",
    "SELECT \n",
    "    symbol,\n",
    "    MIN(ts) as data_inicio,\n",
    "    MAX(ts) as data_fim,\n",
    "    MAX(ts) - MIN(ts) as duracao,\n",
    "    COUNT(*) as total_registros\n",
    "FROM market_data\n",
    "GROUP BY symbol\n",
    "ORDER BY data_fim DESC;"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
